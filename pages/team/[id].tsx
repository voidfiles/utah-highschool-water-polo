import type { NextPage } from "next";
import { useRouter } from "next/router";
import data from "../../public/data.json";
import Head from "next/head";
import Team from "../../lib/models/Team";
import Site from "../../lib/models/Site";
import Game from "../../lib/models/Game";
import partitionGames from "../../lib/utils/partitionGames";
import GameByWeek from "../../components/GamesByWeek";
import Nav from "../../components/Nav";

type MyProps = {
  siteData: any;
};

const TeamPage: NextPage<MyProps> = ({ siteData }) => {
  const router = useRouter();
  const { id } = router.query;

  const teams = siteData.teams.map((team: any) => {
    return Team.fromObject(team);
  });

  const selectedTeam = Team.items[id as string];
  const sites = siteData.sites.map((site: any) => {
    return Site.fromObject(site);
  });
  const games = siteData.games
    .map((game: any) => {
      return Game.fromObject(game);
    })
    .filter((g: Game) => {
      if (g.home.id == id) {
        return true;
      }
      if (g.visitor.id == id) {
        return true;
      }

      return false;
    });

  const gamesByWeek = partitionGames((game: Game) => {
    return game.datetime.format("WW");
  }, games);

  return (
    <div className="container mx-auto px-4">
      <Head>
        <title>Game schedule for {selectedTeam.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Nav teams={teams} selectedTeam={selectedTeam}></Nav>
      {gamesByWeek.map((week: [string, Array<Game>], i: number) => {
        return GameByWeek(week, i, selectedTeam);
      })}
    </div>
  );
};

export async function getServerSideProps() {
  return {
    props: {
      siteData: data,
    },
  };
}

export default TeamPage;
